# TiGateway Configuration Schema
# 版本: 1.0.0
# 描述: TiGateway配置文件的标准化Schema定义

$schema: "http://json-schema.org/draft-07/schema#"
$id: "https://tigateway.cn/schemas/config/v1.0.0"

title: "TiGateway Configuration"
description: "TiGateway网关配置文件的标准化Schema"
type: "object"

# 根级别配置
properties:
  # 配置元数据
  metadata:
    type: "object"
    description: "配置元数据信息"
    properties:
      name:
        type: "string"
        description: "配置名称"
        pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
      version:
        type: "string"
        description: "配置版本"
        pattern: "^\\d+\\.\\d+\\.\\d+$"
      description:
        type: "string"
        description: "配置描述"
      created_at:
        type: "string"
        format: "date-time"
        description: "创建时间"
      updated_at:
        type: "string"
        format: "date-time"
        description: "更新时间"
    required: ["name", "version"]

  # 应用配置
  applications:
    type: "array"
    description: "应用配置列表"
    items:
      $ref: "#/definitions/Application"

  # 服务配置
  services:
    type: "array"
    description: "服务配置列表"
    items:
      $ref: "#/definitions/Service"

  # 路由配置
  routes:
    type: "array"
    description: "路由配置列表"
    items:
      $ref: "#/definitions/Route"

  # 中间件配置
  middlewares:
    type: "array"
    description: "中间件配置列表"
    items:
      $ref: "#/definitions/Middleware"

  # 安全配置
  security:
    $ref: "#/definitions/Security"

  # 监控配置
  monitoring:
    $ref: "#/definitions/Monitoring"

required: ["metadata", "applications"]

# 定义部分
definitions:
  # 应用定义
  Application:
    type: "object"
    description: "应用配置"
    properties:
      id:
        type: "string"
        description: "应用唯一标识"
        pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
      name:
        type: "string"
        description: "应用名称"
        minLength: 1
        maxLength: 100
      description:
        type: "string"
        description: "应用描述"
        maxLength: 500
      type:
        type: "string"
        enum: ["web", "mobile", "api", "admin"]
        description: "应用类型"
      status:
        type: "string"
        enum: ["active", "inactive", "maintenance"]
        description: "应用状态"
        default: "active"
      credentials:
        $ref: "#/definitions/Credentials"
      permissions:
        type: "array"
        description: "应用权限列表"
        items:
          $ref: "#/definitions/Permission"
      rate_limits:
        $ref: "#/definitions/RateLimits"
      tags:
        type: "array"
        description: "应用标签"
        items:
          type: "string"
      metadata:
        type: "object"
        description: "应用元数据"
        additionalProperties: true
    required: ["id", "name", "type", "credentials"]

  # 服务定义
  Service:
    type: "object"
    description: "服务配置"
    properties:
      id:
        type: "string"
        description: "服务唯一标识"
        pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
      name:
        type: "string"
        description: "服务名称"
        minLength: 1
        maxLength: 100
      description:
        type: "string"
        description: "服务描述"
        maxLength: 500
      type:
        type: "string"
        enum: ["http", "tcp", "udp", "grpc"]
        description: "服务类型"
      endpoints:
        type: "array"
        description: "服务端点列表"
        items:
          $ref: "#/definitions/Endpoint"
      health_check:
        $ref: "#/definitions/HealthCheck"
      load_balancing:
        $ref: "#/definitions/LoadBalancing"
      circuit_breaker:
        $ref: "#/definitions/CircuitBreaker"
      retry_policy:
        $ref: "#/definitions/RetryPolicy"
      timeout:
        $ref: "#/definitions/Timeout"
      tags:
        type: "array"
        description: "服务标签"
        items:
          type: "string"
    required: ["id", "name", "type", "endpoints"]

  # 路由定义
  Route:
    type: "object"
    description: "路由配置"
    properties:
      id:
        type: "string"
        description: "路由唯一标识"
        pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
      name:
        type: "string"
        description: "路由名称"
        minLength: 1
        maxLength: 100
      description:
        type: "string"
        description: "路由描述"
        maxLength: 500
      path:
        type: "string"
        description: "路由路径"
        pattern: "^/"
      methods:
        type: "array"
        description: "允许的HTTP方法"
        items:
          type: "string"
          enum: ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"]
      host:
        type: "string"
        description: "主机名匹配"
      priority:
        type: "integer"
        description: "路由优先级"
        minimum: 0
        maximum: 1000
        default: 100
      service_id:
        type: "string"
        description: "目标服务ID"
      middlewares:
        type: "array"
        description: "应用的中间件列表"
        items:
          type: "string"
      predicates:
        type: "array"
        description: "路由谓词"
        items:
          $ref: "#/definitions/Predicate"
      filters:
        type: "array"
        description: "路由过滤器"
        items:
          $ref: "#/definitions/Filter"
      tags:
        type: "array"
        description: "路由标签"
        items:
          type: "string"
    required: ["id", "name", "path", "service_id"]

  # 中间件定义
  Middleware:
    type: "object"
    description: "中间件配置"
    properties:
      id:
        type: "string"
        description: "中间件唯一标识"
        pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
      name:
        type: "string"
        description: "中间件名称"
        minLength: 1
        maxLength: 100
      type:
        type: "string"
        enum: ["auth", "rate_limit", "cors", "logging", "metrics", "transform", "cache"]
        description: "中间件类型"
      config:
        type: "object"
        description: "中间件配置参数"
        additionalProperties: true
      enabled:
        type: "boolean"
        description: "是否启用"
        default: true
      order:
        type: "integer"
        description: "执行顺序"
        minimum: 0
        maximum: 1000
        default: 100
    required: ["id", "name", "type"]

  # 凭据定义
  Credentials:
    type: "object"
    description: "应用凭据"
    properties:
      app_key:
        type: "string"
        description: "应用密钥"
        minLength: 8
        maxLength: 64
      app_secret:
        type: "string"
        description: "应用密钥"
        minLength: 16
        maxLength: 128
      algorithm:
        type: "string"
        enum: ["HMAC-SHA256", "HMAC-SHA1", "MD5"]
        description: "签名算法"
        default: "HMAC-SHA256"
      expires_at:
        type: "string"
        format: "date-time"
        description: "过期时间"
    required: ["app_key", "app_secret"]

  # 权限定义
  Permission:
    type: "object"
    description: "应用权限"
    properties:
      resource:
        type: "string"
        description: "资源标识"
      actions:
        type: "array"
        description: "允许的操作"
        items:
          type: "string"
          enum: ["read", "write", "execute", "admin"]
      conditions:
        type: "object"
        description: "权限条件"
        additionalProperties: true
    required: ["resource", "actions"]

  # 限流定义
  RateLimits:
    type: "object"
    description: "限流配置"
    properties:
      requests_per_second:
        type: "integer"
        description: "每秒请求数限制"
        minimum: 1
      requests_per_minute:
        type: "integer"
        description: "每分钟请求数限制"
        minimum: 1
      requests_per_hour:
        type: "integer"
        description: "每小时请求数限制"
        minimum: 1
      burst_size:
        type: "integer"
        description: "突发请求大小"
        minimum: 1
        default: 10
      strategy:
        type: "string"
        enum: ["fixed_window", "sliding_window", "token_bucket"]
        description: "限流策略"
        default: "token_bucket"

  # 端点定义
  Endpoint:
    type: "object"
    description: "服务端点"
    properties:
      url:
        type: "string"
        format: "uri"
        description: "端点URL"
      weight:
        type: "integer"
        description: "负载均衡权重"
        minimum: 1
        maximum: 100
        default: 1
      health_check_path:
        type: "string"
        description: "健康检查路径"
        default: "/health"
      metadata:
        type: "object"
        description: "端点元数据"
        additionalProperties: true
    required: ["url"]

  # 健康检查定义
  HealthCheck:
    type: "object"
    description: "健康检查配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用健康检查"
        default: true
      interval:
        type: "integer"
        description: "检查间隔（秒）"
        minimum: 1
        default: 30
      timeout:
        type: "integer"
        description: "超时时间（秒）"
        minimum: 1
        default: 5
      retries:
        type: "integer"
        description: "重试次数"
        minimum: 0
        default: 3
      path:
        type: "string"
        description: "健康检查路径"
        default: "/health"

  # 负载均衡定义
  LoadBalancing:
    type: "object"
    description: "负载均衡配置"
    properties:
      strategy:
        type: "string"
        enum: ["round_robin", "weighted_round_robin", "least_connections", "random", "ip_hash"]
        description: "负载均衡策略"
        default: "round_robin"
      sticky_session:
        type: "boolean"
        description: "是否启用粘性会话"
        default: false
      session_cookie_name:
        type: "string"
        description: "会话Cookie名称"
        default: "JSESSIONID"

  # 熔断器定义
  CircuitBreaker:
    type: "object"
    description: "熔断器配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用熔断器"
        default: true
      failure_threshold:
        type: "integer"
        description: "失败阈值"
        minimum: 1
        default: 5
      success_threshold:
        type: "integer"
        description: "成功阈值"
        minimum: 1
        default: 3
      timeout:
        type: "integer"
        description: "熔断超时时间（秒）"
        minimum: 1
        default: 60

  # 重试策略定义
  RetryPolicy:
    type: "object"
    description: "重试策略配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用重试"
        default: true
      max_attempts:
        type: "integer"
        description: "最大重试次数"
        minimum: 1
        maximum: 10
        default: 3
      backoff_strategy:
        type: "string"
        enum: ["fixed", "exponential", "linear"]
        description: "退避策略"
        default: "exponential"
      initial_delay:
        type: "integer"
        description: "初始延迟（毫秒）"
        minimum: 1
        default: 1000
      max_delay:
        type: "integer"
        description: "最大延迟（毫秒）"
        minimum: 1
        default: 10000

  # 超时定义
  Timeout:
    type: "object"
    description: "超时配置"
    properties:
      connect:
        type: "integer"
        description: "连接超时（毫秒）"
        minimum: 1
        default: 5000
      read:
        type: "integer"
        description: "读取超时（毫秒）"
        minimum: 1
        default: 30000
      write:
        type: "integer"
        description: "写入超时（毫秒）"
        minimum: 1
        default: 30000

  # 谓词定义
  Predicate:
    type: "object"
    description: "路由谓词"
    properties:
      type:
        type: "string"
        enum: ["path", "method", "header", "query", "host", "remote_addr", "weight"]
        description: "谓词类型"
      config:
        type: "object"
        description: "谓词配置"
        additionalProperties: true
    required: ["type", "config"]

  # 过滤器定义
  Filter:
    type: "object"
    description: "路由过滤器"
    properties:
      type:
        type: "string"
        enum: ["add_request_header", "add_response_header", "remove_request_header", "remove_response_header", "rewrite_path", "strip_prefix", "add_prefix", "circuit_breaker", "retry", "rate_limit"]
        description: "过滤器类型"
      config:
        type: "object"
        description: "过滤器配置"
        additionalProperties: true
    required: ["type", "config"]

  # 安全定义
  Security:
    type: "object"
    description: "安全配置"
    properties:
      cors:
        $ref: "#/definitions/CORS"
      authentication:
        $ref: "#/definitions/Authentication"
      authorization:
        $ref: "#/definitions/Authorization"
      ssl:
        $ref: "#/definitions/SSL"

  # CORS定义
  CORS:
    type: "object"
    description: "CORS配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用CORS"
        default: false
      allowed_origins:
        type: "array"
        description: "允许的源"
        items:
          type: "string"
      allowed_methods:
        type: "array"
        description: "允许的方法"
        items:
          type: "string"
      allowed_headers:
        type: "array"
        description: "允许的头部"
        items:
          type: "string"
      exposed_headers:
        type: "array"
        description: "暴露的头部"
        items:
          type: "string"
      allow_credentials:
        type: "boolean"
        description: "是否允许凭据"
        default: false
      max_age:
        type: "integer"
        description: "预检请求缓存时间（秒）"
        minimum: 0
        default: 3600

  # 认证定义
  Authentication:
    type: "object"
    description: "认证配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用认证"
        default: false
      type:
        type: "string"
        enum: ["jwt", "oauth2", "basic", "api_key", "custom"]
        description: "认证类型"
      config:
        type: "object"
        description: "认证配置参数"
        additionalProperties: true

  # 授权定义
  Authorization:
    type: "object"
    description: "授权配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用授权"
        default: false
      type:
        type: "string"
        enum: ["rbac", "abac", "custom"]
        description: "授权类型"
      config:
        type: "object"
        description: "授权配置参数"
        additionalProperties: true

  # SSL定义
  SSL:
    type: "object"
    description: "SSL配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用SSL"
        default: false
      certificate:
        type: "string"
        description: "证书内容"
      private_key:
        type: "string"
        description: "私钥内容"
      ca_certificate:
        type: "string"
        description: "CA证书内容"

  # 监控定义
  Monitoring:
    type: "object"
    description: "监控配置"
    properties:
      metrics:
        $ref: "#/definitions/Metrics"
      tracing:
        $ref: "#/definitions/Tracing"
      logging:
        $ref: "#/definitions/Logging"

  # 指标定义
  Metrics:
    type: "object"
    description: "指标配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用指标收集"
        default: true
      exporters:
        type: "array"
        description: "指标导出器"
        items:
          type: "string"
          enum: ["prometheus", "influxdb", "datadog", "newrelic"]
      interval:
        type: "integer"
        description: "收集间隔（秒）"
        minimum: 1
        default: 30

  # 链路追踪定义
  Tracing:
    type: "object"
    description: "链路追踪配置"
    properties:
      enabled:
        type: "boolean"
        description: "是否启用链路追踪"
        default: false
      exporters:
        type: "array"
        description: "追踪导出器"
        items:
          type: "string"
          enum: ["jaeger", "zipkin", "datadog", "newrelic"]
      sampling_rate:
        type: "number"
        description: "采样率"
        minimum: 0
        maximum: 1
        default: 0.1

  # 日志定义
  Logging:
    type: "object"
    description: "日志配置"
    properties:
      level:
        type: "string"
        enum: ["TRACE", "DEBUG", "INFO", "WARN", "ERROR"]
        description: "日志级别"
        default: "INFO"
      format:
        type: "string"
        enum: ["json", "text"]
        description: "日志格式"
        default: "json"
      outputs:
        type: "array"
        description: "日志输出"
        items:
          type: "string"
          enum: ["console", "file", "syslog", "kafka", "elasticsearch"]

# 示例配置
examples:
  - |
    metadata:
      name: "tigateway-config"
      version: "1.0.0"
      description: "TiGateway示例配置"
      created_at: "2024-01-01T00:00:00Z"
      updated_at: "2024-01-01T00:00:00Z"
    
    applications:
      - id: "web-app"
        name: "Web Application"
        description: "Web应用配置"
        type: "web"
        status: "active"
        credentials:
          app_key: "web-app-key"
          app_secret: "web-app-secret-key-123456"
        permissions:
          - resource: "user-service"
            actions: ["read", "write"]
        rate_limits:
          requests_per_second: 100
          requests_per_minute: 1000
    
    services:
      - id: "user-service"
        name: "User Service"
        description: "用户服务"
        type: "http"
        endpoints:
          - url: "http://user-service:8080"
            weight: 1
        health_check:
          enabled: true
          interval: 30
          path: "/health"
        load_balancing:
          strategy: "round_robin"
    
    routes:
      - id: "user-routes"
        name: "User Routes"
        description: "用户相关路由"
        path: "/api/users"
        methods: ["GET", "POST", "PUT", "DELETE"]
        service_id: "user-service"
        priority: 100
        middlewares: ["auth", "rate-limit"]
    
    middlewares:
      - id: "auth"
        name: "Authentication"
        type: "auth"
        enabled: true
        order: 1
        config:
          type: "jwt"
          secret: "jwt-secret"
      - id: "rate-limit"
        name: "Rate Limiting"
        type: "rate_limit"
        enabled: true
        order: 2
        config:
          requests_per_second: 10
    
    security:
      cors:
        enabled: true
        allowed_origins: ["https://example.com"]
        allowed_methods: ["GET", "POST", "PUT", "DELETE"]
        allow_credentials: true
    
    monitoring:
      metrics:
        enabled: true
        exporters: ["prometheus"]
        interval: 30
      logging:
        level: "INFO"
        format: "json"
        outputs: ["console", "file"]
