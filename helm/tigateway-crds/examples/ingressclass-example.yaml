# Example IngressClass for TiGateway
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: tigateway
  labels:
    app: tigateway
    component: ingressclass
  annotations:
    ingressclass.kubernetes.io/is-default-class: "false"
    tigateway.cn/description: "TiGateway Ingress Controller"
    tigateway.cn/version: "1.0.0"
spec:
  controller: tigateway.cn/ingress-controller
  parameters:
    apiGroup: tigateway.cn
    kind: IngressClassParameters
    name: tigateway-parameters
---
# Example IngressClassParameters (optional)
apiVersion: tigateway.cn/v1
kind: IngressClassParameters
metadata:
  name: tigateway-parameters
  namespace: tigateway-system
spec:
  # TiGateway specific parameters
  gateway:
    namespace: default
    name: default-gateway
  # Default configuration
  defaults:
    timeout: 30s
    maxBodySize: 10m
    proxyBufferSize: 8k
    proxyBuffersNumber: 8
  # SSL configuration
  ssl:
    enabled: true
    redirect: true
    forceRedirect: false
  # Rate limiting
  rateLimit:
    enabled: true
    requests: 100
    window: 1m
---
# Example Ingress using TiGateway IngressClass
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tigateway-ingress-example
  namespace: default
  labels:
    app: tigateway
  annotations:
    tigateway.cn/auto-discover: "true"
    tigateway.cn/rewrite-target: /$2
    tigateway.cn/ssl-redirect: "true"
    tigateway.cn/force-ssl-redirect: "true"
    tigateway.cn/proxy-body-size: "10m"
    tigateway.cn/proxy-connect-timeout: "600"
    tigateway.cn/proxy-send-timeout: "600"
    tigateway.cn/proxy-read-timeout: "600"
    tigateway.cn/rate-limit: "100"
    tigateway.cn/rate-limit-window: "1m"
spec:
  ingressClassName: tigateway
  tls:
    - hosts:
        - "api.example.com"
        - "app.example.com"
      secretName: "tigateway-tls"
  rules:
    - host: api.example.com
      http:
        paths:
          - path: /api/users(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 8080
          - path: /api/products(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: product-service
                port:
                  number: 8080
    - host: app.example.com
      http:
        paths:
          - path: /app(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
---
# Example Service for user-service
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: default
  labels:
    app: user-service
spec:
  selector:
    app: user-service
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
# Example Service for product-service
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: default
  labels:
    app: product-service
spec:
  selector:
    app: product-service
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
# Example Service for frontend-service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: default
  labels:
    app: frontend-service
spec:
  selector:
    app: frontend-service
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
